#include <ESP8266WiFi.h>
#include <ezTime.h>

Timezone GB;

const char* ssid     = "CE-Hub";
const char* password = "()c454,w1f1";
const char* host = "iot.io";

void setup() {
  Serial.begin(115200);
  delay(100);

  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");  
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  
  waitForSync();

  Serial.println("UTC: " + UTC.dateTime());

  GB.setLocation("Europe/London");
  Serial.println("London time: " + GB.dateTime()); 
  
}

int value = 0;

void loop() {
  delay(5000);
  ++value;

  Serial.println("-------------------------------");
  Serial.print("Connecting to ");
  Serial.println(host);
  
  // Use WiFiClient class to create TCP connections
  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  
  // We now create a URI for the request
  String url = "/data/index.html";
  Serial.print("Requesting URL: ");
  Serial.println(host + url);
  
  // This will send the request to the server
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  
  delay(500);

  // Read all the lines of the reply from server and print them to Serial
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  
  Serial.println();
  Serial.println("closing connection");
}
#include <PubSubClient.h>

const char* mqtt_server = "bats.cetool.org";

WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;

pinMode(BUILDTIN_LED, OUTPUT) ; //Initialize the BUILDIN_LED pin as an output
digitalWrite(BUILDTIN_LED, HIGH) ; // Turn the LED off by making the voltage HIGH

client.setServer(mqtt_server, 1883);
client.setCallback(callback);

void sendMQTT() {

  if (!client.connected()) {
      reconnect();
  }
  client.loop();
  ++value;
  snprintf (msg, 50, "hello world #%ld", value);
  Serial.print("Publish message: ");
  Serieal.println(msg);
  client.piblish("test", msg);
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print(*Message arrived ") ;
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i];
}
Serial.println();

//Swicth on the LED if an 1 was received as first character
if ((char)payload[0] =='1') {
  digitalWrite(BUILTIN_LED, LOW); // Turn the LED on (Note that LOW is the voltage level //
  but actually the LED is on; this is beacuse it is active low in the ESP-01)
} else {
  digitalWrite(BUILTIN_LED, HIGH); // Turn the LED off by making the voltage HIGH
}

void reconnect () {
  //Loop until we're connected 
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("test", "hello world");
      // ... and resubscribe
      client.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}
  
